{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_emotion__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_utils_typography__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","require","_ref","data","a","createElement","className","css","allMarkdownRemark","totalCount","edges","map","_ref3","node","key","id","to","fields","slug","rhythm","frontmatter","title","date","excerpt","m","module","exports","default","StaticQuery","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-index-js-ffa4a666f5c1583a4d12.js","sourcesContent":["import React from \"react\";\nimport { css } from \"react-emotion\";\nimport { Link, graphql } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\nimport Layout from \"../components/layout\";\nrequire(\"prismjs/plugins/line-numbers/prism-line-numbers.css\");\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <div>\n        <h1\n          className={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          Daily Progress\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              className={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                className={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}{\" \"}\n                <span\n                  className={css`\n                    color: #bbb;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\";\nimport { css } from \"react-emotion\";\nimport { StaticQuery, Link, graphql } from \"gatsby\";\n\nimport { rhythm } from \"../utils/typography\";\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        className={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            className={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        <Link\n          to={`/about/`}\n          className={css`\n            float: right;\n          `}\n        >\n          About\n        </Link>\n        {children}\n      </div>\n    )}\n  />\n);\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}