{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_emotion__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_2__","_utils_typography__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","require","_ref","data","a","createElement","className","css","allMarkdownRemark","totalCount","edges","map","_ref3","node","key","id","to","fields","slug","rhythm","frontmatter","title","date","excerpt","m","module","exports","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-index-js-20fe8730ef244b1e8a9a.js","sourcesContent":["import React from \"react\";\r\nimport { css } from \"react-emotion\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { rhythm } from \"../utils/typography\";\r\nimport Layout from \"../components/layout\";\r\nrequire(\"prismjs/plugins/line-numbers/prism-line-numbers.css\");\r\n\r\nexport default ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1\r\n          className={css`\r\n            display: inline-block;\r\n            border-bottom: 1px solid;\r\n          `}\r\n        >\r\n          Daily Progress\r\n        </h1>\r\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Link\r\n              to={node.fields.slug}\r\n              className={css`\r\n                text-decoration: none;\r\n                color: inherit;\r\n              `}\r\n            >\r\n              <h3\r\n                className={css`\r\n                  margin-bottom: ${rhythm(1 / 4)};\r\n                `}\r\n              >\r\n                {node.frontmatter.title}{\" \"}\r\n                <span\r\n                  className={css`\r\n                    color: #bbb;\r\n                  `}\r\n                >\r\n                  â€” {node.frontmatter.date}\r\n                </span>\r\n              </h3>\r\n              <p>{node.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm","import React from \"react\";\r\nimport { css } from \"react-emotion\";\r\nimport { StaticQuery, Link, graphql } from \"gatsby\";\r\n\r\nimport { rhythm } from \"../utils/typography\";\r\n\r\nexport default ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <div\r\n        className={css`\r\n          margin: 0 auto;\r\n          max-width: 700px;\r\n          padding: ${rhythm(2)};\r\n          padding-top: ${rhythm(1.5)};\r\n        `}\r\n      >\r\n        <Link to={`/`}>\r\n          <h3\r\n            className={css`\r\n              margin-bottom: ${rhythm(2)};\r\n              display: inline-block;\r\n              font-style: normal;\r\n            `}\r\n          >\r\n            {data.site.siteMetadata.title}\r\n          </h3>\r\n        </Link>\r\n        <Link\r\n          to={`/about/`}\r\n          className={css`\r\n            float: right;\r\n          `}\r\n        >\r\n          About\r\n        </Link>\r\n        {children}\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}